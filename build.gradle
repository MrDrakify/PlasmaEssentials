plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
group = project.maven_group
version = "${project.mod_version}-${project.minecraft_version}"
String jarpath = "${project.buildDir}/libs/${project.archivesBaseName}-${project.version}"

// Shadow stuff
configurations {
    dev
    compile.extendsFrom shade
    modCompile.extendsFrom modShade
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'http://server.bbkr.space:8081/artifactory/libs-release'
        allowInsecureProtocol = true
    }
    maven { url 'https://repo.spongepowered.org/maven' }
    maven {
        name = 'sonatype-oss'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
    maven {
        name = "Gunpowder"
        url = "https://maven.martmists.com/releases"
    }
    maven {
        url "https://hephaestus.dev/release"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // FLP
    modImplementation include('me.lucko:fabric-permissions-api:0.1-SNAPSHOT')

    implementation include("org.yaml:snakeyaml:1.27")

    implementation include("org.projectlombok:lombok:1.18.20")

    implementation include(group: 'com.google.inject', name: 'guice', version: '4.0')

    implementation include("net.luckperms:api:${project.luckperms_version}")

    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
    implementation include(group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.0.1')

    modApi "io.github.gunpowder:gunpowder-api:0.5.6+1.16.5"

    //implementation include("dev.inkwell:hermes:1.0.0")

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

// Tasks
shadowJar {
    enabled = true
    // Only shadow implementation/modImplementation
    configurations = [project.configurations.shade]
    classifier = "dev"
}

//task remapShadowJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
//    afterEvaluate {
//        input = file("${jarpath}-dev.jar")
//        archiveName = "${project.name}-${project.version}.jar"
//        addNestedDependencies = true
//        remapAccessWidener = true
//    }
//}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}